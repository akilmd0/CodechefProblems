#include <bits/stdc++.h>
using namespace std;

#define MAX INT_MAX
#define MIN INT_MIN
#define ll long long int
#define nline "\n"
#define BIG 998244353
#define MOD 1000000007
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define pii pair<ll,ll>
#define vi vector<ll>
#define vb vector<bool>
#define vc vector<char>
#define vs vector<string>
#define vvi vector<vi>
#define vpii vector<pii>
#define ff first
#define ss second
#define mkp make_pair
#define pb emplace_back

vvi multiply(vvi &a, vvi &b) {
    vvi ans(15,vi(15,0));
    for (int i = 0;i<15;i++) {
        for (int j = 0;j<15;j++) {
            for (int k = 0;k<15;k++) {
                ans[i][j]=(ans[i][j] + (a[i][k]*b[k][j])%MOD)%MOD;
            }
        }
    }
    return ans;
}

vvi power(vvi mat, ll n) {
    vvi ans(15,vi (15,0));
    for (int i = 0;i<15;i++) {
        ans[i][i]=1;
    }
    while (n>0) {
        if (n&1) ans=multiply(ans,mat);
        mat=multiply(mat,mat);
        n/=2;
    }
    return ans;
}
void solve()
{
    ll k;
    ll n;
    cin >> n;
    cin>>k;
    vi arr(k), dp(16),jump(16);
    // creating base case 
    dp[0]=1;
    for(auto &x: arr)cin>>x;
    sort(arr.begin(), arr.end());
    for(int i=1;i<=15;i++){
        for(int j=0; j<k;j++){
            if(i-arr[j]>=0)
                dp[i]=(dp[i]+dp[i-arr[j]])%MOD;
        }
    }
    if(n<=15){
        cout<<dp[n]<<nline;
        return;
    }
    // using matrix exponent

    vvi mat(15, vi(15,0));

    for(int i=0;i<k;i++)
        mat[0][arr[i]-1]=1;

    for(int i=1;i<15;i++){
        mat[i][i-1]=1;
    }
    ll val=0; 

    vvi ans = power(mat,n-15);
    for(int i=0;i<15;i++){
        val=(val+(ans[0][i]*dp[15-i])%MOD)%MOD;
    }
    cout<<val<<"\n";

}

int main()
{
    fast_io;

    int t=1;
    cin>>t;
    while(t--) 
        solve();
}
